@model List<NoteApp.Models.Note>

<h2>Node Dashboard</h2>

<div>
    <button id="createNode">Create Node</button>
</div>

<div id="nodesContainer">
    @foreach (var node in Model)
    {
        <div class="node">
            <textarea id="content-@node.Id">@node.Content</textarea>
            <!-- The Save button should be rendered here -->
            <button class="saveNode" data-id="@node.Id">Save</button>
            <!-- The Share button -->
            <button class="shareNode" data-id="@node.Id">Share</button>
            <!-- The Delete button -->
            <button class="deleteNode" data-id="@node.Id">Delete</button>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Event listener for creating new nodes
        document.getElementById("createNode").addEventListener("click", function () {
            fetch('@Url.Action("CreateNode")', { method: 'POST' })
                .then(() => location.reload());
        });

        // Event listener for saving node content
        document.querySelectorAll(".saveNode").forEach(button => {
            button.addEventListener("click", function () {
                const id = button.getAttribute("data-id");
                const content = document.getElementById(`content-${id}`).value; // Fetch content
                fetch(`@Url.Action("SaveNode")?id=${id}&content=${encodeURIComponent(content)}`, { method: 'POST' })
                    .then(() => location.reload());
            });
        });

        // Event listener for sharing a node (copy shortened URL to clipboard)
        document.querySelectorAll(".shareNode").forEach(button => {
            button.addEventListener("click", function () {
                const id = button.getAttribute("data-id");

                // Properly construct the URL with a query parameter
                const url = '@Url.Action("ShareNode", "Home")' + '?id=' + id;

                // Fetch the shortened URL from the server
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        // Copy the shortened URL to clipboard
                        navigator.clipboard.writeText(data.shortUri)
                            .then(() => alert("Shortened URL copied to clipboard"))
                            .catch(err => console.error("Could not copy text: ", err));
                    });
            });
        });

        // Event listener for deleting a node
        document.querySelectorAll(".deleteNode").forEach(button => {
            button.addEventListener("click", function () {
                const id = button.getAttribute("data-id");

                // Send a delete request to the server
                fetch(`@Url.Action("DeleteNode")?id=${id}`, { method: 'POST' })
                    .then(() => location.reload())
                    .catch(err => console.error("Could not delete node: ", err));
            });
        });
    </script>
}